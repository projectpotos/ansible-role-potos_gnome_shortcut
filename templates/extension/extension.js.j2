/*
 * {{ ansible_managed }}
 */

const Gio = imports.gi.Gio;
const GLib = imports.gi.GLib;
const {St, Clutter} = imports.gi;

const Main = imports.ui.main;
const PanelMenu = imports.ui.panelMenu;
const PopupMenu = imports.ui.popupMenu;
const Panel = imports.ui.panel;

const Lang = imports.lang;
const Util = imports.misc.util;
const Me = imports.misc.extensionUtils.getCurrentExtension();

const positionIndex = {{ potos_gnome_shortcuts_position_index }};
const positionPlace = "{{ potos_gnome_shortcuts_position_place }}";
let extension;
let list = {{ potos_gnome_shortcuts_actions | to_json }};


const extensionObject = new Lang.Class({
  Name: "gnomeShortcut.projectpotos",
  Extends: PanelMenu.Button,
  _init: function() {
    let icon;
    icon = new St.Icon({ width: Main.layoutManager.panelBox.get_height(),
                         gicon: Gio.icon_new_for_string(`${Me.path}/icon.svg`)});
    let label = new St.Label({ text: ""});
    this.parent(0.0, label.text);
    this.actor.add_actor(icon);

    let item = null;
    for (x in list) {
      if (list[x].type == "command"){
        item = new PopupMenu.PopupMenuItem(list[x].text);
        item.connect("activate", Lang.bind(this,
          (function() {
            var currentAction = list[x].action;
            return function(){
              Util.spawn(currentAction);
            }
          })()));
        this.menu.addMenuItem(item);
      }
      if (list[x].type == "separator") {
        this.menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
      }
    }

  },
  destroy: function() {
    this.parent();
  }
});


function init(){ }

function enable(){
  extension = new extensionObject();
  Main.panel.addToStatusArea("gnomeShortcut.projectpotos", extension, positionPlace, positionIndex);
}
function disable(){
  extension.destroy();
}
